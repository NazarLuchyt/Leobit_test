
@{
    ViewBag.Title = "GetTestByGuid";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using QuizApp.ViewModel.Managing
@model TestViewModel
@{
    var count = 1;
}
<div>
    <button type="button" class="btn btn-default" onclick="goBack()">❮ Back</button>
</div>

@using (Html.BeginForm("UpdateTest", "ChangeTestInfo", new { testGuid = Session["testGuid"] }, FormMethod.Post, null))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        <div>
            @Html.LabelFor(model => model.Name)
        </div>
        <div>
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
  
    <div>
        <div>
            @Html.LabelFor(model => model.Description)
        </div>
        <div>
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        <div>
            @Html.LabelFor(model => model.TestTimeLimit)
        </div>
        <div>
            @Html.EditorFor(model => model.TestTimeLimit, new { htmlAttributes = new { @class = "time-Class" } })
            @Html.ValidationMessageFor(model => model.TestTimeLimit, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        <div>
            @Html.LabelFor(model => model.QuestionTimeLimit)
        </div>
        <div>
            @Html.EditorFor(model => model.QuestionTimeLimit, new { htmlAttributes = new { @class = "time-Class" } })
            @Html.ValidationMessageFor(model => model.QuestionTimeLimit, "", new { @class = "text-danger" })
        </div>
    </div>
    <input type="submit" value="Save" />
}

@using (Html.BeginForm("GetQuestionsByTestGuid", "ChangeTestInfo", FormMethod.Get))
{
    @Html.Hidden("testGuid", Model.Guid)
    <input type="submit" value="Show Questions" />
}