@using QuizApp.ViewModel.Managing
@model QuizApp.ViewModel.HelpModels.ModelAndInfo<AnswerViewModel>

<div class="row">
    @Html.ActionLink("❮ Back", "GetAnswersByQuestionGuid", "Test", new { questionGuid = Model.Guid/*, testGuid = Session["testGuid"] */}, new { @class = "btn btn-default col-md-1" })
</div>

<h2>Create Answer</h2>

@using (Html.BeginForm("CreateAnswer", "Test", new { questionGuid = Model.Guid}, FormMethod.Post))
{
    @Html.HiddenFor(model=>model.Guid, Model.Guid)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TransferModel.Instance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransferModel.Instance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransferModel.Instance, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TransferModel.IsCorrect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TransferModel.IsCorrect)
                    @Html.ValidationMessageFor(model => model.TransferModel.IsCorrect, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}